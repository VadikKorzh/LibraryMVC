@model IEnumerable<LibraryDataService.Models.Book>
@{
    ViewBag.Title = "KRZHK Library - Index";
}
<h1>KRZHK Library</h1>
<hr />
<p>
    &real;
    @Html.ActionLink("Create new writer   ", "CreateWriter")
    &nbsp; &copy;
    @Html.ActionLink("Create new book ", "CreateBook")
    &nbsp; &oplus;
    @Html.ActionLink("Writers ", "IndexWriters")
</p>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" id="MyChart">
            </div>
        </div>
    </div>
</div>

@*<div id="MyChart">
    </div>*@
@if (Model.ToList().Count == 0)
{
    <h3>The library is empty. Try to create some books or writers :)</h3>
}
else {
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Author.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ISBN)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ISBN)
                </td>
                <td>
                    @Html.ActionLink("Edit", "EditBook", new { id = item.Id }) |
                    @Html.ActionLink("Details", "BookDetails", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "DeleteBook", new { id = item.Id }) |
                    <a href="javascript:void(0);" class="chart-btn" data-id="@item.Id" data-toggle="modal" data-target="#myModal">Chart</a>
                </td>
            </tr>
        }

    </table>
}
<p>
    The page was built at @DateTime.Now.ToLongTimeString()
    @Html.ActionLink("Clear cache", "IndexClearCache")
</p>


@section Scripts{
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { packages: ['corechart', 'line'] });
        //google.charts.setOnLoadCallback(drawBackgroundColor);

        function drawBackgroundColor(id) {

            var options = {
                hAxis: {
                    title: 'Time'
                },
                vAxis: {
                    title: 'Popularity'
                },
                backgroundColor: '#f1f8e9',
                curveType: 'function',
                colors: ['black']
            };
            var chartBlock = document.getElementById('MyChart');
            var chart = new google.visualization.LineChart(chartBlock);

            if (typeof (id) === 'undefined') {
                var data = new google.visualization.DataTable([]);
                chart.draw(data, options);
            }
            else {
                $.ajax({
                    type: "GET",
                    url: "/api/charts/hits/" + id,
                    content: 'application/json',
                    beforeSend: function () {
                        $.blockUI({
                            message: 'loading data'
                        });
                    },
                    success: function (data) {
                        var gData = new google.visualization.DataTable(data);
                        chart.draw(gData, options);
                    },
                    error: function () {
                        alert('Sorry, no data found.');
                    },
                    complete: function () {
                        $.unblockUI();
                    }
                })
            }
        }

        $(document).ready(function () {
            $('.chart-btn').click(function () {
                var id = $(this).data('id');
                $('#myModal').on('shown.bs.modal', function () {
                    drawBackgroundColor(id);
                })


            })
        })
    </script>
}

